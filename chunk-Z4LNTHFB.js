import{a as l}from"./chunk-IT5HYUXY.js";import{a as g,b as h,c as s}from"./chunk-XY4KCV2H.js";var u=class m{DB_NAME="VafyndellDB";DB_VERSION=1;db=null;storeNames=new Set;static create(){return s(this,null,function*(){let t=new m;return yield t.init(),t})}constructor(){console.log("[IndexedDBClient] Constructor chamado")}init(){return s(this,null,function*(){if(this.db){console.log("[IndexedDBClient] Banco j\xE1 inicializado.");return}let r=(yield indexedDB.databases?.())?.find(o=>o.name===this.DB_NAME);return r?.version&&r.version>this.DB_VERSION&&(this.DB_VERSION=r.version,console.log(`[IndexedDBClient] Ajustando vers\xE3o para ${this.DB_VERSION}`)),new Promise((o,i)=>{console.log(`[IndexedDBClient] Abrindo banco ${this.DB_NAME} v${this.DB_VERSION}...`);let e=indexedDB.open(this.DB_NAME,this.DB_VERSION);e.onerror=()=>i(e.error),e.onsuccess=()=>{this.db=e.result,this.storeNames=new Set(Array.from(this.db.objectStoreNames)),console.log("[IndexedDBClient] Banco aberto com stores:",Array.from(this.storeNames)),o()},e.onupgradeneeded=a=>{let n=a.target.result;console.log("[IndexedDBClient] Upgrade do banco. Stores existentes:",Array.from(n.objectStoreNames))}})})}ensureStore(t){return s(this,null,function*(){if(this.storeNames.has(t))return;console.log(`[IndexedDBClient] Store "${t}" n\xE3o existe \u2192 recriando DB...`),this.db?.close();let i=(yield indexedDB.databases?.())?.find(e=>e.name===this.DB_NAME)?.version??this.DB_VERSION;return this.DB_VERSION=Math.max(this.DB_VERSION,i)+1,new Promise((e,a)=>{let n=indexedDB.open(this.DB_NAME,this.DB_VERSION);n.onerror=()=>a(n.error),n.onupgradeneeded=d=>{let y=d.target.result;y.objectStoreNames.contains(t)||(y.createObjectStore(t,{keyPath:"id"}),console.log(`[IndexedDBClient] Store criada: ${t}`))},n.onsuccess=()=>{this.db=n.result,this.storeNames=new Set(Array.from(this.db.objectStoreNames)),console.log("[IndexedDBClient] Banco reaberto com stores:",Array.from(this.storeNames)),e()}})})}put(t,r){return s(this,null,function*(){return yield this.ensureStore(t),new Promise((o,i)=>{let e=this.db.transaction(t,"readwrite");e.objectStore(t).put(r),e.oncomplete=()=>o(),e.onerror=()=>i(e.error)})})}bulkPut(t,r){return s(this,null,function*(){return yield this.ensureStore(t),new Promise((o,i)=>{let e=this.db.transaction(t,"readwrite"),a=e.objectStore(t);r.forEach(n=>a.put(n)),e.oncomplete=()=>o(),e.onerror=()=>i(e.error)})})}get(t,r){return s(this,null,function*(){return this.storeNames.has(t)?new Promise((o,i)=>{let a=this.db.transaction(t,"readonly").objectStore(t).get(r);a.onsuccess=()=>o(a.result||null),a.onerror=()=>i(a.error)}):null})}getAll(t){return s(this,null,function*(){return this.storeNames.has(t)?new Promise((r,o)=>{let e=this.db.transaction(t,"readonly").objectStore(t).getAll();e.onsuccess=()=>r(e.result),e.onerror=()=>o(e.error)}):[]})}delete(t,r){return s(this,null,function*(){if(this.storeNames.has(t))return new Promise((o,i)=>{let e=this.db.transaction(t,"readwrite");e.objectStore(t).delete(r),e.oncomplete=()=>o(),e.onerror=()=>i(e.error)})})}clear(t){return s(this,null,function*(){if(this.storeNames.has(t))return new Promise((r,o)=>{let i=this.db.transaction(t,"readwrite");i.objectStore(t).clear(),i.oncomplete=()=>r(),i.onerror=()=>o(i.error)})})}deleteDatabase(){return s(this,null,function*(){return console.log("[IndexedDBClient] deleteDatabase \u2192 resetando banco..."),this.db&&(this.db.close(),this.db=null),new Promise((t,r)=>{let o=indexedDB.deleteDatabase(this.DB_NAME);o.onsuccess=()=>{this.storeNames.clear(),this.DB_VERSION=1,console.log("[IndexedDBClient] Banco deletado com sucesso."),t()},o.onerror=()=>r(o.error)})})}};var c=class{static ENDPOINT="https://script.google.com/macros/s/AKfycby-ec_h6sljntLAgoWhpeyBFGTkWygqS7Xx1Yvkx8RKDKiXDHPxtHZ8hhh6vrN91JEL/exec";static SHEET_ID="19B2aMGrajvhPJfOvYXt059-fECytaN38iFsP8GInD_g";static call(t,r,o=!0){return s(this,null,function*(){let i=l.getIdToken();if(!i||!l.isAuthenticated()){let d=yield l.refreshIdToken();if(!d)throw new Error("Usu\xE1rio precisa fazer login novamente.");i=d.idToken}let e={idToken:i,action:t,payload:h(g({},r),{sheetId:this.SHEET_ID})};console.log("\u27A1\uFE0F Enviando para Script:",this.ENDPOINT,e);let a=yield fetch(this.ENDPOINT,{method:"POST",body:JSON.stringify(e)}),n=yield a.text();if(!a.ok){if(console.error("\u274C Erro bruto do Script:",n),a.status===401&&o){if(console.warn("[ScriptClient] Token inv\xE1lido, tentando renovar..."),!(yield l.refreshIdToken()))throw new Error("Usu\xE1rio precisa se autenticar novamente.");return this.call(t,r,!1)}throw new Error(`Erro no Script: ${a.status} - ${a.statusText}
${n}`)}try{return JSON.parse(n)}catch(d){throw console.error("\u274C Resposta n\xE3o-JSON:",n),d}})}static createRow(t){return this.call("sheet.createRow",t)}static getAll(t){return this.call("sheet.getAll",t)}static getByIndex(t){return this.call("sheet.getByIndex",t)}static getCell(t){return this.call("sheet.getCell",t)}static updateByIndex(t){return this.call("sheet.updateByIndex",t)}static updateCell(t){return this.call("sheet.updateCell",t)}static deleteByIndex(t){return this.call("sheet.deleteByIndex",t)}static upload(t){return this.call("drive.upload",t)}static update(t){return this.call("drive.update",t)}static remove(t){return this.call("drive.delete",t)}static controllerCreate(t){return this.call("controller.create",t)}static controllerGetAll(t){return this.call("controller.getAll",t)}static controllerGetByIndex(t){return this.call("controller.getByIndex",t)}static controllerGetCell(t){return this.call("controller.getCell",t)}static controllerUpdateByIndex(t){return this.call("controller.updateByIndex",t)}static controllerUpdateCell(t){return this.call("controller.updateCell",t)}static controllerDeleteByIndex(t){return this.call("controller.deleteByIndex",t)}};var T=class{static TAB="Personagem";static STORE=this.TAB;static META_STORE="metadados";static FOLDER_ID="1zId11Ydti8d0FOQoQjd9lQmPo6GiJx26";static dbPromise=null;static getDb(){return s(this,null,function*(){return this.dbPromise||(console.log("[JogadorRepository] Criando inst\xE2ncia IndexedDBClient..."),this.dbPromise=u.create()),this.dbPromise})}static createJogador(t){return s(this,null,function*(){console.log("[JogadorRepository] Criando novo jogador...",t);let r=yield c.controllerCreate({tab:this.TAB,attrs:t,folderId:this.FOLDER_ID}),o=h(g({},r),{id:r?.index||Date.now()}),i=yield this.getDb();yield i.put(this.STORE,o);let e=yield c.controllerGetAll({tab:"Metadados"});if(Array.isArray(e)){let a=e.find(n=>n.SheetName===this.TAB);a&&(yield i.put(this.META_STORE,{id:this.TAB,UltimaModificacao:a.UltimaModificacao}))}return console.log("[JogadorRepository] Jogador criado e salvo no cache:",o),o})}static getAllJogadores(){return s(this,null,function*(){console.log("[JogadorRepository] getAllJogadores...");let t=yield c.controllerGetAll({tab:this.TAB});return Array.isArray(t)?t:[]})}static getLocalJogador(){return s(this,null,function*(){let t=l.getUser();if(!t)throw new Error("Usu\xE1rio n\xE3o autenticado.");let o=yield(yield this.getDb()).getAll(this.STORE);return console.log("[JogadorRepository] getLocalJogador \u2192 total encontrados:",o.length),o.find(i=>i.email===t.email)||null})}static forceFetchJogador(){return s(this,null,function*(){let t=l.getUser();if(!t)throw new Error("Usu\xE1rio n\xE3o autenticado.");console.log("[JogadorRepository] Baixando lista online...");let r=yield this.getAllJogadores();if(!r.length)return console.warn("[JogadorRepository] Nenhum jogador encontrado online."),null;let o=r.map(a=>h(g({},a),{id:a.index})),i=yield this.getDb();yield i.clear(this.STORE),yield i.bulkPut(this.STORE,o),console.log("[JogadorRepository] Cache atualizado com lista online.");let e=yield c.controllerGetAll({tab:"Metadados"});if(Array.isArray(e)){let a=e.find(n=>n.SheetName===this.TAB);a&&(yield i.put(this.META_STORE,{id:this.TAB,UltimaModificacao:a.UltimaModificacao}),console.log("[JogadorRepository] Metadados locais atualizados:",a))}return o.find(a=>a.email===t.email)||null})}static syncJogadores(){return s(this,null,function*(){console.log("[JogadorRepository] Verificando necessidade de sincroniza\xE7\xE3o...");let t=yield c.controllerGetAll({tab:"Metadados"});if(!Array.isArray(t))return!1;let r=t.find(a=>a.SheetName===this.TAB);if(!r)return console.warn("[JogadorRepository] Nenhum metadado online encontrado."),!1;let i=yield(yield this.getDb()).get(this.META_STORE,this.TAB);return!i||i.UltimaModificacao!==r.UltimaModificacao?(console.log("[JogadorRepository] Cache desatualizado \u2192 sincronizando..."),yield this.forceFetchJogador(),!0):(console.log("[JogadorRepository] Cache j\xE1 est\xE1 atualizado."),!1)})}static getCurrentJogador(){return s(this,null,function*(){if(console.log("[JogadorRepository] getCurrentJogador iniciado."),!l.getUser())throw new Error("Usu\xE1rio n\xE3o autenticado.");let r=yield this.getLocalJogador();return r?(this.syncJogadores().then(o=>s(this,null,function*(){o&&(r=yield this.getLocalJogador())})).catch(o=>console.error("[JogadorRepository] Erro ao sincronizar:",o)),r):yield this.forceFetchJogador()})}};export{T as a};
