import{v as p,w as g}from"./chunk-S65SB5BW.js";import{a as n,b as h,d as r}from"./chunk-QQSIVCMV.js";var l=class{static BASE_URL="https://script.google.com/macros/s/AKfycbyF7zPufz4P_6gDpxIo5_MJ8_B_bhFV3L6yQh6jXNfIlnuSHjaQHr37gpsi97-OWy1vTA/exec";static SHEET_ID="19B2aMGrajvhPJfOvYXt059-fECytaN38iFsP8GInD_g";static FOLDER_ID="1zId11Ydti8d0FOQoQjd9lQmPo6GiJx26";static call(t,e=!0){return r(this,null,function*(){let s=g.getIdToken();if(!s||!g.isAuthenticated()){let c=yield g.refreshIdToken();if(!c)throw new Error("Usu\xE1rio precisa fazer login novamente.");s=c.idToken}let a=n({idToken:s,sheetId:this.SHEET_ID,folderId:this.FOLDER_ID},t);console.log("\u27A1\uFE0F [ScriptClientV3] Enviando \u2192",a);let i=yield fetch(this.BASE_URL,{method:"POST",body:JSON.stringify(a)}),o=yield i.text();if(!i.ok){if(console.error("\u274C [ScriptClientV3] Erro bruto do Script:",o),i.status===401&&e){if(console.warn("[ScriptClientV3] Token inv\xE1lido, tentando renovar..."),!(yield g.refreshIdToken()))throw new Error("Usu\xE1rio precisa se autenticar novamente.");return this.call(t,!1)}throw new Error(`[ScriptClientV3] HTTP ${i.status} - ${i.statusText}
${o}`)}try{let c=JSON.parse(o);return console.log("\u2B05\uFE0F [ScriptClientV3] Resposta \u2192",c),c}catch(c){throw console.error("\u274C [ScriptClientV3] Resposta n\xE3o-JSON:",o),c}})}static create(t){return this.call({payloads:{create:t}})}static updateById(t){return this.call({payloads:{updateById:t}})}static deleteById(t){return this.call({payloads:{deleteById:t}})}static getAll(t){return r(this,null,function*(){return(yield this.call({payloads:{getAll:Array.isArray(t)?t:[t]}}))?.getAll||{}})}static getById(t){return r(this,null,function*(){return(yield this.call({payloads:{getById:t}}))?.getById||{}})}static normalizeResponse(t,e){return(t?.[e]||[]).map(s=>h(n({},s),{id:String(s.id),index:s.index}))}};var y=class d{constructor(t){this.tab=t}static META_STORE="Metadados";static dbPromise=null;get store(){return this.tab}getDb(){return r(this,null,function*(){return d.dbPromise||(d.dbPromise=p.create()),d.dbPromise})}normalizeId(t){return h(n({},t),{id:String(t.id)})}create(t){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u25B6\uFE0F create \u2192`,t);let e=yield l.create({[this.tab]:[t]});console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F create result`,e);let s=(e?.create?.[this.tab]||[])[0];if(!s?.ok)throw new Error(`[${this.tab}] Erro ao criar: ${s?.erro||"desconhecido"}`);let a=this.normalizeId(n(n({},t),s));return yield(yield this.getDb()).put(this.store,a),console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4BE} create persistido localmente \u2192`,a),a})}update(t){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u25B6\uFE0F update \u2192`,t);let e=yield l.updateById({[this.tab]:[t]});console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F update result`,e);let s=(e?.updateById?.[this.tab]||[])[0];if(!s?.ok)throw new Error(`[${this.tab}] Erro ao atualizar: ${s?.erro||"desconhecido"}`);let a=this.normalizeId(n(n({},t),s));return yield(yield this.getDb()).put(this.store,a),console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4BE} update persistido localmente \u2192`,a),a})}delete(t){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u25B6\uFE0F delete \u2192 id=${t}`);let e=yield l.deleteById({[this.tab]:[{id:t}]});return console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F delete result`,e),(e?.deleteById?.[this.tab]||[])[0]?.ok?(yield(yield this.getDb()).delete(this.store,String(t)),console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4BE} delete persistido localmente \u2192 id=${t}`),!0):(console.warn(`[BaseRepositoryV2:${this.tab}] \u26A0\uFE0F n\xE3o foi poss\xEDvel deletar id=${t}`),!1)})}createBatch(t){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u25B6\uFE0F createBatch \u2192`,t);let e=yield l.create({[this.tab]:t});console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F createBatch result`,e);let s=e?.create?.[this.tab]||[],a=new Map(s.map(o=>[String(o.id),o])),i=t.map(o=>this.normalizeId(n(n({},o),a.get(String(o.id))||{})));return yield(yield this.getDb()).bulkPut(this.store,i),console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4BE} createBatch persistiu ${i.length} registros`),i})}updateBatch(t){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u25B6\uFE0F updateBatch \u2192`,t);let e=yield l.updateById({[this.tab]:t});console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F updateBatch result`,e);let s=e?.updateById?.[this.tab]||[],a=new Map(s.map(o=>[String(o.id),o])),i=t.map(o=>this.normalizeId(n(n({},o),a.get(String(o.id))||{})));return yield(yield this.getDb()).bulkPut(this.store,i),console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4BE} updateBatch persistiu ${i.length} registros`),i})}deleteBatch(t){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u25B6\uFE0F deleteBatch \u2192`,t);let e=yield l.deleteById({[this.tab]:t.map(o=>({id:String(o)}))});console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F deleteBatch result`,e);let a=(e?.deleteById?.[this.tab]||[]).every(o=>o.ok),i=yield this.getDb();return yield Promise.all(t.map(o=>i.delete(this.store,String(o)))),console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4BE} deleteBatch persistido localmente \u2192 ${t.length} registros`),a})}getLocal(){return r(this,null,function*(){let s=(yield(yield this.getDb()).getAll(this.store)).map(a=>this.normalizeId(a));return console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4C2} getLocal \u2192`,s),s})}getById(t,e=!0){return r(this,null,function*(){if(console.log(`[BaseRepositoryV2:${this.tab}] \u25B6\uFE0F getById \u2192 id=${t} preferLocal=${e}`),e){let i=yield(yield this.getDb()).get(this.store,String(t));if(i){let o=this.normalizeId(i);return console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4C2} getById encontrado localmente \u2192`,o),o}return null}let s=yield l.getById({[this.tab]:[{id:String(t)}]});console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F getById result`,s);let a=s?.[this.tab]?.[0]||null;return a?this.normalizeId(a):null})}getAllOnline(){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u{1F310} getAllOnline iniciado`);let t=yield l.getAll(this.tab);return console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F getAllOnline result`,t),(t?.[this.tab]||[]).map(e=>this.normalizeId(e))})}forceFetch(){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u{1F310} forceFetch iniciado`);let t=yield l.getAll([this.tab,"Metadados"]);console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F forceFetch result`,t);let e=(t?.[this.tab]||[]).map(i=>this.normalizeId(i)),s=yield this.getDb();yield s.clear(this.store),yield s.bulkPut(this.store,e),console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4BE} forceFetch persistiu ${e.length} registros`);let a=t?.Metadados?.find(i=>i.id===this.tab);return a&&(yield s.put(d.META_STORE,{id:this.tab,UltimaModificacao:a.UltimaModificacao}),console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4DD} metadados atualizados \u2192`,a)),e})}static multiFetch(t){return r(this,null,function*(){console.log("[BaseRepositoryV2] \u{1F310} multiFetch iniciado \u2192",t);let e=yield l.getAll(t);console.log("[BaseRepositoryV2] \u25C0\uFE0F multiFetch result",e);let s=yield p.create(),a={};for(let i of t){let o=(e?.[i]||[]).map(c=>h(n({},c),{id:String(c.id)}));a[i]=o,yield s.clear(i),yield s.bulkPut(i,o),console.log(`[BaseRepositoryV2] \u{1F4BE} multiFetch persistiu ${o.length} registros em ${i}`)}return a})}sync(){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u{1F504} sync iniciado`);let t=yield l.getAll("Metadados");console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F sync result`,t);let e=t?.Metadados?.find(o=>o.id===this.tab);if(!e)return console.warn(`[BaseRepositoryV2:${this.tab}] \u26A0\uFE0F Nenhum metadado encontrado online`),!1;let a=yield(yield this.getDb()).get(d.META_STORE,this.tab);return!a||a.UltimaModificacao!==e.UltimaModificacao?(console.log(`[BaseRepositoryV2:${this.tab}] \u26A0\uFE0F Atualiza\xE7\xE3o necess\xE1ria \u2192 executando forceFetch()`),yield this.forceFetch(),!0):(console.log(`[BaseRepositoryV2:${this.tab}] \u2705 Nada para atualizar`),!1)})}};export{y as a};
