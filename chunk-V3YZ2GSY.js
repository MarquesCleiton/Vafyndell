import{y,z as g}from"./chunk-7ENCPJQF.js";import{a as n,b as d,g as r}from"./chunk-DNZPJZVY.js";var c=class{static BASE_URL="https://script.google.com/macros/s/AKfycbyF7zPufz4P_6gDpxIo5_MJ8_B_bhFV3L6yQh6jXNfIlnuSHjaQHr37gpsi97-OWy1vTA/exec";static SHEET_ID="19B2aMGrajvhPJfOvYXt059-fECytaN38iFsP8GInD_g";static FOLDER_ID="1zId11Ydti8d0FOQoQjd9lQmPo6GiJx26";static call(t,e=!0){return r(this,null,function*(){let o=g.getIdToken();if(!o||!g.isAuthenticated()){let l=yield g.refreshIdToken();if(!l)throw new Error("Usu\xE1rio precisa fazer login novamente.");o=l.idToken}let s=n({idToken:o,sheetId:this.SHEET_ID,folderId:this.FOLDER_ID},t);console.log("\u27A1\uFE0F [ScriptClientV3] Enviando \u2192",s);let i=yield fetch(this.BASE_URL,{method:"POST",body:JSON.stringify(s)}),a=yield i.text();if(!i.ok){if(console.error("\u274C [ScriptClientV3] Erro bruto do Script:",a),i.status===401&&e){if(console.warn("[ScriptClientV3] Token inv\xE1lido, tentando renovar..."),!(yield g.refreshIdToken()))throw new Error("Usu\xE1rio precisa se autenticar novamente.");return this.call(t,!1)}throw new Error(`[ScriptClientV3] HTTP ${i.status} - ${i.statusText}
${a}`)}try{let l=JSON.parse(a);return console.log("\u2B05\uFE0F [ScriptClientV3] Resposta \u2192",l),l}catch(l){throw console.error("\u274C [ScriptClientV3] Resposta n\xE3o-JSON:",a),l}})}static batch(t){return r(this,null,function*(){return(yield this.call({payloads:t}))||{}})}static create(t){return this.call({payloads:{create:t}})}static updateById(t){return this.call({payloads:{updateById:t}})}static deleteById(t){return this.call({payloads:{deleteById:t}})}static getAll(t){return r(this,null,function*(){return(yield this.call({payloads:{getAll:Array.isArray(t)?t:[t]}}))?.getAll||{}})}static getById(t){return r(this,null,function*(){return(yield this.call({payloads:{getById:t}}))?.getById||{}})}static normalizeResponse(t,e){return(t?.[e]||[]).map(o=>d(n({},o),{id:String(o.id),index:o.index}))}};var u=class h{constructor(t){this.tab=t}static META_STORE="Metadados";static dbPromise=null;get store(){return this.tab}getDb(){return r(this,null,function*(){return h.dbPromise||(h.dbPromise=y.create()),h.dbPromise})}normalizeId(t){return d(n({},t),{id:String(t.id)})}create(t){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u25B6\uFE0F create \u2192`,t);let e=yield c.create({[this.tab]:[t]});console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F create result`,e);let o=(e?.create?.[this.tab]||[])[0];if(!o?.ok)throw new Error(`[${this.tab}] Erro ao criar: ${o?.erro||"desconhecido"}`);let s=this.normalizeId(n(n({},t),o));return yield(yield this.getDb()).put(this.store,s),console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4BE} create persistido localmente \u2192`,s),s})}update(t){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u25B6\uFE0F update \u2192`,t);let e=yield c.updateById({[this.tab]:[t]});console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F update result`,e);let o=(e?.updateById?.[this.tab]||[])[0];if(!o?.ok)throw new Error(`[${this.tab}] Erro ao atualizar: ${o?.erro||"desconhecido"}`);let s=this.normalizeId(n(n({},t),o));return yield(yield this.getDb()).put(this.store,s),console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4BE} update persistido localmente \u2192`,s),s})}delete(t){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u25B6\uFE0F delete \u2192 id=${t}`);let e=yield c.deleteById({[this.tab]:[{id:t}]});return console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F delete result`,e),(e?.deleteById?.[this.tab]||[])[0]?.ok?(yield(yield this.getDb()).delete(this.store,String(t)),console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4BE} delete persistido localmente \u2192 id=${t}`),!0):(console.warn(`[BaseRepositoryV2:${this.tab}] \u26A0\uFE0F n\xE3o foi poss\xEDvel deletar id=${t}`),!1)})}createBatch(t){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u25B6\uFE0F createBatch \u2192`,t);let e=yield c.create({[this.tab]:t});console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F createBatch result`,e);let o=e?.create?.[this.tab]||[],s=new Map(o.map(a=>[String(a.id),a])),i=t.map(a=>this.normalizeId(n(n({},a),s.get(String(a.id))||{})));return yield(yield this.getDb()).bulkPut(this.store,i),console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4BE} createBatch persistiu ${i.length} registros`),i})}updateBatch(t){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u25B6\uFE0F updateBatch \u2192`,t);let e=yield c.updateById({[this.tab]:t});console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F updateBatch result`,e);let o=e?.updateById?.[this.tab]||[],s=new Map(o.map(a=>[String(a.id),a])),i=t.map(a=>this.normalizeId(n(n({},a),s.get(String(a.id))||{})));return yield(yield this.getDb()).bulkPut(this.store,i),console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4BE} updateBatch persistiu ${i.length} registros`),i})}deleteBatch(t){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u25B6\uFE0F deleteBatch \u2192`,t);let e=yield c.deleteById({[this.tab]:t.map(a=>({id:String(a)}))});console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F deleteBatch result`,e);let s=(e?.deleteById?.[this.tab]||[]).every(a=>a.ok),i=yield this.getDb();return yield Promise.all(t.map(a=>i.delete(this.store,String(a)))),console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4BE} deleteBatch persistido localmente \u2192 ${t.length} registros`),s})}getLocal(){return r(this,null,function*(){let o=(yield(yield this.getDb()).getAll(this.store)).map(s=>this.normalizeId(s));return console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4C2} getLocal \u2192`,o),o})}getById(t,e=!0){return r(this,null,function*(){if(console.log(`[BaseRepositoryV2:${this.tab}] \u25B6\uFE0F getById \u2192 id=${t} preferLocal=${e}`),e){let i=yield(yield this.getDb()).get(this.store,String(t));if(i){let a=this.normalizeId(i);return console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4C2} getById encontrado localmente \u2192`,a),a}return null}let o=yield c.getById({[this.tab]:[{id:String(t)}]});console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F getById result`,o);let s=o?.[this.tab]?.[0]||null;return s?this.normalizeId(s):null})}getAllOnline(){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u{1F310} getAllOnline iniciado`);let t=yield c.getAll(this.tab);return console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F getAllOnline result`,t),(t?.[this.tab]||[]).map(e=>this.normalizeId(e))})}forceFetch(){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u{1F310} forceFetch iniciado`);let t=yield c.getAll([this.tab,"Metadados"]);console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F forceFetch result`,t);let e=(t?.[this.tab]||[]).map(i=>this.normalizeId(i)),o=yield this.getDb();yield o.clear(this.store),yield o.bulkPut(this.store,e),console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4BE} forceFetch persistiu ${e.length} registros`);let s=t?.Metadados?.find(i=>i.id===this.tab);return s&&(yield o.put(h.META_STORE,{id:this.tab,UltimaModificacao:s.UltimaModificacao}),console.log(`[BaseRepositoryV2:${this.tab}] \u{1F4DD} metadados atualizados \u2192`,s)),e})}static multiFetch(t){return r(this,null,function*(){console.log("[BaseRepositoryV2] \u{1F310} multiFetch iniciado \u2192",t);let e=yield c.getAll(t);console.log("[BaseRepositoryV2] \u25C0\uFE0F multiFetch result",e);let o=yield y.create(),s={};for(let i of t){let a=(e?.[i]||[]).map(l=>d(n({},l),{id:String(l.id)}));s[i]=a,yield o.clear(i),yield o.bulkPut(i,a),console.log(`[BaseRepositoryV2] \u{1F4BE} multiFetch persistiu ${a.length} registros em ${i}`)}return s})}sync(){return r(this,null,function*(){console.log(`[BaseRepositoryV2:${this.tab}] \u{1F504} sync iniciado`);let t=yield c.getAll("Metadados");console.log(`[BaseRepositoryV2:${this.tab}] \u25C0\uFE0F sync result`,t);let e=t?.Metadados?.find(a=>a.id===this.tab);if(!e)return console.warn(`[BaseRepositoryV2:${this.tab}] \u26A0\uFE0F Nenhum metadado encontrado online`),!1;let s=yield(yield this.getDb()).get(h.META_STORE,this.tab);return!s||s.UltimaModificacao!==e.UltimaModificacao?(console.log(`[BaseRepositoryV2:${this.tab}] \u26A0\uFE0F Atualiza\xE7\xE3o necess\xE1ria \u2192 executando forceFetch()`),yield this.forceFetch(),!0):(console.log(`[BaseRepositoryV2:${this.tab}] \u2705 Nada para atualizar`),!1)})}static batch(t){return r(this,null,function*(){console.log("[BaseRepositoryV2] \u25B6\uFE0F batch iniciado \u2192",t);let e=yield c.batch(t);console.log("[BaseRepositoryV2] \u25C0\uFE0F batch result",e);let o=yield y.create();if(t.create)for(let s of Object.keys(t.create)){let i=(e?.create?.[s]||[]).map(a=>d(n({},a),{id:String(a.id)}));yield o.bulkPut(s,i),console.log(`[BaseRepositoryV2] \u{1F4BE} batch/create persistiu ${i.length} em ${s}`)}if(t.updateById)for(let s of Object.keys(t.updateById)){let i=(e?.updateById?.[s]||[]).map(a=>d(n({},a),{id:String(a.id)}));yield o.bulkPut(s,i),console.log(`[BaseRepositoryV2] \u{1F4BE} batch/update persistiu ${i.length} em ${s}`)}if(t.deleteById)for(let s of Object.keys(t.deleteById)){let i=(e?.deleteById?.[s]||[]).map(a=>a.id);for(let a of i)yield o.delete(s,String(a));console.log(`[BaseRepositoryV2] \u{1F4BE} batch/delete removeu ${i.length} de ${s}`)}return e})}};export{u as a};
