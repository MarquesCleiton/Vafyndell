import{a as v,b as r}from"./chunk-2P6BNU5L.js";import{v as m}from"./chunk-HRLERFBW.js";import{a as l,b as d,d as o}from"./chunk-QQSIVCMV.js";var u=class{static TAB="Inventario";static STORE=this.TAB;static META_STORE="metadados";static dbPromise=null;static getDb(){return o(this,null,function*(){return this.dbPromise||(console.log("[InventarioRepository] Criando inst\xE2ncia IndexedDBClient..."),this.dbPromise=v.create()),this.dbPromise})}static createInventario(t){return o(this,null,function*(){console.log("[InventarioRepository] Criando novo registro de invent\xE1rio...",t);let i=yield r.controllerCreate({tab:this.TAB,attrs:t}),e=d(l({},i),{id:Number(i?.id)||Date.now(),index:i?.index});return yield(yield this.getDb()).put(this.STORE,e),console.log("[InventarioRepository] Registro criado e salvo no cache:",e),e})}static updateInventario(t){return o(this,null,function*(){console.log("[InventarioRepository] Atualizando invent\xE1rio...",t);let i=yield r.controllerUpdateByIndex({tab:this.TAB,index:t.index,attrs:t}),e=d(l(l({},t),i),{id:Number(i?.id||t.id),index:i?.index||t.index});return yield(yield this.getDb()).put(this.STORE,e),console.log("[InventarioRepository] Invent\xE1rio atualizado no cache local:",e),e})}static subtrairQuantidade(t,i,e){return o(this,null,function*(){let a=yield this.getDb(),n=(yield a.getAll(this.STORE)).find(s=>s.jogador===t&&s.item_catalogo===i);if(!n){console.warn(`[InventarioRepository] Item ${i} n\xE3o encontrado para ${t}`);return}n.quantidade=Math.max(0,(n.quantidade||0)-e),yield a.put(this.STORE,n),yield r.controllerUpdateByIndex({tab:this.TAB,index:n.index,attrs:n}),console.log(`[InventarioRepository] Subtra\xEDdo ${e} do item ${i}. Nova qtd: ${n.quantidade}`)})}static adicionarOuIncrementar(t,i,e){return o(this,null,function*(){let a=yield this.getDb(),n=(yield a.getAll(this.STORE)).find(s=>s.jogador===t&&s.item_catalogo===i);if(!n){n={id:Date.now(),index:void 0,jogador:t,item_catalogo:i,quantidade:e},yield this.createInventario(n),console.log(`[InventarioRepository] Item ${i} criado com quantidade ${e}`);return}n.quantidade=(n.quantidade||0)+e,yield a.put(this.STORE,n),yield r.controllerUpdateByIndex({tab:this.TAB,index:n.index,attrs:n}),console.log(`[InventarioRepository] Item ${i} incrementado em ${e}. Nova qtd: ${n.quantidade}`)})}static deleteInventario(t){return o(this,null,function*(){console.log("[InventarioRepository] Deletando invent\xE1rio...",t);let i=yield this.getDb(),e=yield i.get(this.STORE,t);return e?(yield r.controllerDeleteByIndex({tab:this.TAB,index:e.index}),yield i.delete(this.STORE,t),console.log("[InventarioRepository] Registro exclu\xEDdo do cache/local:",t),!0):(console.warn("[InventarioRepository] Item n\xE3o encontrado no cache:",t),!1)})}static getAllInventario(){return o(this,null,function*(){console.log("[InventarioRepository] getAllInventario...");let t=yield r.controllerGetAll({tab:this.TAB});return Array.isArray(t)?t.map(i=>d(l({},i),{id:Number(i.id),index:i.index})):[]})}static getLocalInventarioByJogador(t){return o(this,null,function*(){return(yield(yield this.getDb()).getAll(this.STORE)).filter(a=>a.jogador===t)})}static forceFetchInventario(){return o(this,null,function*(){let t=m.getUser();if(!t)throw new Error("Usu\xE1rio n\xE3o autenticado.");console.log("[InventarioRepository] Baixando lista online...");let i=yield this.getAllInventario();if(!i.length)return console.warn("[InventarioRepository] Nenhum invent\xE1rio encontrado online."),[];let e=i.map(n=>d(l({},n),{id:Number(n.id),index:n.index})),a=yield this.getDb();yield a.clear(this.STORE),yield a.bulkPut(this.STORE,e),console.log("[InventarioRepository] Cache atualizado com lista online.");let c=yield r.controllerGetAll({tab:"Metadados"});if(Array.isArray(c)){let n=c.find(s=>s.SheetName===this.TAB);n&&(yield a.put(this.META_STORE,{id:this.TAB,UltimaModificacao:n.UltimaModificacao}))}return e.filter(n=>n.jogador===t.email)})}static syncInventario(){return o(this,null,function*(){console.log("[InventarioRepository] Verificando necessidade de sincroniza\xE7\xE3o...");let t=yield r.controllerGetAll({tab:"Metadados"});if(!Array.isArray(t))return!1;let i=t.find(n=>n.SheetName===this.TAB);if(!i)return!1;let a=yield(yield this.getDb()).get(this.META_STORE,this.TAB);return!a||a.UltimaModificacao!==i.UltimaModificacao?(yield this.forceFetchInventario(),!0):!1})}};export{u as a};
